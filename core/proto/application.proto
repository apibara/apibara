// # Apibara Application service.
//
// The application service is used to communicate between
// the node and applications implemented in languages that are
// not rust.
syntax = "proto3";

package apibara.application.v1alpha1;

import "google/protobuf/any.proto";

service Application {
  // Called once on the node's first start.
  // Used to initialize the node state.
  rpc Init(InitRequest) returns (InitResponse);

  // Called when the application receives data from an input stream.
  //
  // The response contains messages that will be forwarded to the
  // output stream.
  rpc ReceiveData(ReceiveDataRequest) returns (ReceiveDataResponse);
}

// Init request. It's empty.
message InitRequest {}

// Init response. Returns information about the application.
message InitResponse {
  // List of input streams of this node.
  repeated InputStream inputs = 1;
  // Output stream of this node.
  OutputStream output = 2;
}

// Output stream description.
message OutputStream {
  // Type name of the output message type.
  string message_type = 1;
  // Serialized FileDescriptorProto messages.
  // We avoid taking a dependency on descriptor.proto, which uses proto2 only
  // features, by making them opaque bytes instead.
  bytes file_descriptor_proto = 2;
}

// Input stream description.
message InputStream {
  // Unique input id.
  uint64 id = 1;
  // Input stream url.
  string url = 2;
  // Input starting sequence.
  uint64 starting_sequence = 3;
}

message ReceiveDataRequest {
  // The input the data comes from.
  uint64 input_id = 1;
  // The message sequence number.
  uint64 sequence = 2;
  // The data.
  google.protobuf.Any data = 3;
}

message ReceiveDataResponse { repeated google.protobuf.Any data = 1; }